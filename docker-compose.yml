# version: '3.5'

# services:
#   db:
#     image: mysql:latest
#     container_name: mysql-db
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: kazefrofos
#     ports:
#       - '3306:3306'
#     volumes:
#       - ./mysql_data:/var/lib/mysql
#     networks:
#       - my_custom_network

#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: nodejs-app
#     environment:
#       PORT: 5000
#       MYSQL_HOST: db
#       MYSQL_USER: root
#       MYSQL_PASSWORD: root
#       MYSQL_DB: kazefrofos
#     ports:
#       - '5000:5000'
#     depends_on:
#       - db
#     volumes:
#       - ./src:/app/src
#     networks:
#       - my_custom_network

#   phpmyadmin:
#     image: phpmyadmin/phpmyadmin
#     container_name: phpmyadmin
#     restart: always
#     environment:
#       PMA_HOST: db
#       PMA_PORT: 3306
#       PMA_USER: root
#       PMA_PASSWORD: root
#     ports:
#       - '8080:80'
#     depends_on:
#       - db
#     networks:
#       - my_custom_network

# networks:
#   my_custom_network:
#     driver: bridge

version: '3.5'

services:
  db:
    image: mysql:latest
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kazefrofos
    ports:
      - '3306:3306'
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - my_custom_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodejs-app
    environment:
      PORT: 5000
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DB: kazefrofos
    ports:
      - '5000:5000'
    depends_on:
      - db
    volumes:
      - ./src:/app/src
    networks:
      - my_custom_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - '8080:80'
    depends_on:
      - db
    networks:
      - my_custom_network

networks:
  my_custom_network:
    driver: bridge